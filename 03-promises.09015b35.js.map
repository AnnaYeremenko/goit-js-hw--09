{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,GADQF,SAASC,cAAc,UACrBD,SAASC,cAAc,wBACjCE,EAASH,SAASC,cAAc,oBAChCG,EAAWJ,SAASC,cAAc,sBAExC,IAAII,EAAU,KAEd,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCT,EAAUU,YAAW,KACfH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAGbT,EAAKiB,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOlB,EAAQmB,OACvBC,EAAOF,OAAOjB,EAAOkB,OACrBE,EAASH,OAAOhB,EAASiB,OAE7B,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAckB,EAAI,EAAGL,EAAQG,EAAOE,GACjCC,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEzEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA7B,GAAS8B,OAAOC,QAAQ,sBAAoBrB,QAAeC,MAAU,IAG3ES,EAAMa,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btmEl = document.querySelector('button');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=step]');\nconst amountEl = document.querySelector('input[name=amount]');\n\nlet promise = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    promise = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n}\nform.addEventListener(\"submit\", onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\n  let delay = Number(delayEl.value);\n  let step = Number(stepEl.value);\n  let amount = Number(amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n  }\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$promise","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","failure","catch","currentTarget","reset"],"version":3,"file":"03-promises.09015b35.js.map"}